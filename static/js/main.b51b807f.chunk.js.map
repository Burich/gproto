{"version":3,"sources":["components/main-header/index.js","components/main-header/main-header.jsx","constants.js","components/top-menu/top-menu.jsx","components/top-menu/index.js","utils/index.js","components/pages/main-page.jsx","components/pages/not-found-page.jsx","components/gpapi-service-context/gpapi-service-context.js","hoc/with-gpapi-service.jsx","components/loading-status/index.js","components/loading-status/loading-status.jsx","hoc/with-loading-status.jsx","components/error-status/index.js","components/error-status/error-status.jsx","hoc/with-error-status.jsx","actions/actionFactory.js","actions/measure-units.js","components/table/index.js","components/table/table.jsx","components/measure-units/measure-units-table.jsx","components/measure-units/index.js","components/actions-bar/index.js","components/actions-bar/actions-bar.jsx","components/search-field/index.js","components/search-field/search-field.jsx","components/table-actions/index.js","components/table-actions/table-actions.jsx","components/pages/measure-units-page.jsx","actions/design-brands.js","components/design-brands/design-brands-table.jsx","components/design-brands/index.js","components/pages/design-brands-page.jsx","components/back-button/index.js","components/back-button/back-button.jsx","actions/structural-elements.js","components/structural-elements/structural-elements-table.jsx","components/structural-elements/index.js","components/pages/structural-elements-page.jsx","actions/types-of-jobs.js","components/types-of-jobs/types-of-jobs-tree.jsx","components/types-of-jobs/index.js","components/pages/types-of-jobs-page.jsx","actions/references-and-rates.js","components/references-and-rates/references-and-rates-tree-table.jsx","components/references-and-rates/index.js","actions/fot-and-machinery.js","components/tabs/index.js","components/tabs/tabs.jsx","components/fot-and-machinery/fot-and-machinery-tabs.jsx","components/fot-and-machinery/index.js","components/pages/references-and-rates-page.jsx","components/app/index.js","components/app/app.jsx","services/fetch-service.js","services/gpapi-service.js","services/fake-gpapi-service.js","reducers/measure-units.js","reducers/design-brands.js","reducers/structural-elements.js","reducers/types-of-jobs.js","reducers/references-and-rates.js","reducers/fot-and-machinery.js","reducers/index.js","store.js","index.js"],"names":["MainHeader","className","to","config","isDev","link","path","menuTree","label","submenu","TopMenu","state","hoveredIdx","undefined","onMouseLeave","idx","setState","createSubmenu","map","sub_idx","key","onMouseEnter","length","Component","localImage","filename","process","MeasureUnitsPage","Fragment","src","width","alt","NotFoundPage","React","createContext","GpApiServiceProvider","Provider","GpApiServiceConsumer","Consumer","withGpApiService","Wrapped","props","gpApiService","LoadingStatus","withLoadingStatus","loading","ErrorStatus","error","message","withErrorStatus","actionFactory","type","payload","measureUnitsLoaded","measureUnitsRequested","measureUnitsError","fetchMeasureUnits","dispatch","getMeasureUnits","then","data","catch","err","Table","values","columns","onRowSelected","col","value","row","id","onClick","property","MeasureUnitsTableContainer","this","MeasureUnitsTable","compose","connect","measureUnits","ActionsBar","children","SearchField","placeholder","TableActions","designBrandsLoaded","designBrandsRequested","designBrandsError","fetchDesignBrands","getDesignBrands","DesignBrandsTableContainer","DesignBrandsTable","designBrands","DesignBrandsPage","BackButton","structuralElementsLoaded","structuralElementsRequested","structuralElementsError","fetchStructuralElements","getStructuralElements","StructuralElementsTableContainer","selected","properties","name","measureUnit","StructuralElementsTable","structuralElements","StructuralElementsPage","rowSelected","typesOfJobsLoaded","typesOfJobsRequested","typesOfJobsError","fetchTypesOfJobs","getTypesOfJobs","TypesOfJobsTreeContainer","openedSections","onBranchClicked","includes","filter","section","prevprops","sections","types","TypesOfJobsTree","typesOfJobs","TypesOfJobsPage","referencesAndRatesLoaded","referencesAndRatesRequested","referencesAndRatesError","fetchReferencesAndRates","getReferencesAndRates","ReferencesAndRatesTreeTable","renderType","onTypeSelected","code","cost","renderGroup","group","renderSection","groups","referencesAndRates","fotAndMachineryLoaded","fotAndMachineryRequested","fotAndMachineryError","fetchFotAndMachinery","getFotAndMachineryFor","Tabs","onTabSelected","labels","FotAndMachineryTabs","selectedTab","showSelectedTable","fot","machinery","current","prevProps","fotAndMachinery","ReferencesAndRatesPage","App","exact","component","MainPage","FetchService","_apiUrl","url","fetch","result","ok","Error","json","GpApiService","getResource","FakeGpApiService","replyWithDelay","delay","Promise","resolve","setTimeout","updateMeasureUnitsList","action","updateDesignBrandsList","updateStructuralElementsList","updateTypesOfJobsList","updateReferencesAndRatesList","updateFotAndMachineryValue","reducer","console","log","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b51b807f.chunk.js","sourcesContent":["import MainHeader from './main-header.jsx';\n\nexport default MainHeader;","import React from 'react'\n\nimport { Link } from \"react-router-dom\";\n\nimport './main-header.scss'\n\nconst MainHeader = () => {\n  return (\n    <div className=\"main-header\">\n      <Link to='/'>\n        Интеграционное решение\n      </Link>\n    </div>\n  )\n}\n\nexport default MainHeader;","const prod = {\n    isDev: false,\n    link: (path) => {\n        return `/gproto${path}`;\n    }\n};\n\nconst dev = {\n    isDev: true,\n    link: (path) => {\n        return path;\n    }\n};\n\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import React, {Component} from 'react'\n\nimport { Link } from \"react-router-dom\";\n\nimport { config } from \"../../constants\";\n\nimport './top-menu.scss'\n\nconst menuTree = [\n  {label: 'Генеральный план', to: '/master-plan/'},\n  {label: 'Настройки', submenu: [\n    {label: 'Конструктивные элементы (КЭ)', to: '/structural-elements/'},\n    {label: 'Справочники норм и расценок (УЕР)', to: '/references-and-rates/'},\n    {label: 'Виды работ СМР', to: '/types-of-jobs/'},\n    {label: 'Проектные марки', to: '/design-brands/'},\n    {label: 'Ед.изм', to: '/measure-units/'},\n  ]},\n  {label: 'Рабочее место методолога', submenu: [\n    {label: 'Правила связи УЕР и КЭ', to: '/communication-rules-uer/'},\n    {label: 'Правила связи Видов работ и КЭ', to: '/communication-rules-types-of-jobs/'},\n  ]},\n  {label: 'Ведомость объемов работ', to: '/bill-of-quantities/'},\n  {label: 'Технологическая последовательность работ', to: '/workflow/'},\n]\n\nclass TopMenu extends Component {\n  state = {\n    hoveredIdx: undefined\n  }\n\n  onMouseLeave = (idx) => {\n    this.setState(({hoveredIdx}) => {\n      return {\n        hoveredIdx: hoveredIdx === idx ? undefined : hoveredIdx\n      }\n    });\n  }\n\n  createSubmenu = (submenu) => {\n    const {link} = config;\n\n    return (\n    <div className=\"sub-menu\">\n    {\n      submenu.map(({label, to}, sub_idx) => {\n        return (\n          <Link to={link(to)} key={sub_idx}>\n            <div className=\"sub-menu-item\">\n              {label}\n            </div>\n          </Link>\n        )\n      })\n    }\n    </div>\n    )\n  }\n\n  render() {\n    const {link} = config;\n    // console.log(this.state.hoveredIdx);\n    return (\n      <div className=\"top-menu\">\n        <div className=\"top-menu-row\">\n          {\n            menuTree.map(({label, to, submenu}, idx) => {\n              return (to) \n              ? (\n                <Link \n                  to={link(to)} \n                  key={idx}\n                  className=\"menu-item\"\n                >\n                  <div \n                    onMouseEnter={() => this.setState({hoveredIdx: idx})}\n                    onMouseLeave={() => this.onMouseLeave(idx)}\n                  >\n                    <span>{label}</span>\n                  </div>\n                </Link>\n              ) \n              :\n              (\n                <div \n                  key={idx} \n                  className=\"menu-item\"\n                  onMouseEnter={() => this.setState({hoveredIdx: idx})}\n                  onMouseLeave={() => this.onMouseLeave(idx)}\n                >\n                  <span>{label}</span>\n                  {\n                    ((this.state.hoveredIdx === idx) && submenu && submenu.length) \n                    ? this.createSubmenu(submenu) : null\n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TopMenu;","import TopMenu from './top-menu.jsx';\n\nexport default TopMenu;","const localImage = (filename) => {\n    return `${process.env.PUBLIC_URL}/assets/images/${filename}`;\n}\n\nexport {\n    localImage\n}","import React from 'react'\n\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\n\nimport { localImage } from \"../../utils\";\n\nimport './main-page.scss'\n\nconst MeasureUnitsPage = () => {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <div className=\"main-page\">\n        <div>\n          <p>Прототип решения интеграции СПК и ЦИМ</p>\n          <p>(формироавние графика СМР)</p>\n        </div>\n        <img \n          src={localImage('titleImage.png')}\n          width=\"500\"\n          alt=\"main page title\"\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default MeasureUnitsPage;","import React from 'react'\n\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\n\nimport './not-found-page.scss'\n\nconst NotFoundPage = () => {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <div className=\"not-found-page\">Страница не найдена</div>\n    </React.Fragment>\n  )\n}\n\nexport default NotFoundPage;","import React from 'react'\n\nconst {\n    Provider: GpApiServiceProvider,\n    Consumer: GpApiServiceConsumer\n} = React.createContext();\n\nexport {\n    GpApiServiceProvider,\n    GpApiServiceConsumer\n}","import React from 'react'\n\nimport { GpApiServiceConsumer } from \"../components/gpapi-service-context\";\n\nconst withGpApiService = () => (Wrapped) => {\n  return (props) => (\n    <GpApiServiceConsumer>\n    {\n      (gpApiService) => {\n        return <Wrapped {...props} gpApiService={gpApiService} />\n      }\n    }\n    </GpApiServiceConsumer>\n  )\n}\n\nexport default withGpApiService;","import LoadingStatus from './loading-status.jsx';\n\nexport default LoadingStatus;","import React from 'react'\n\nimport './loading-status.scss'\n\nconst LoadingStatus = () => {\n  return <div className=\"loading-status\">Загрузка...</div>\n}\n\nexport default LoadingStatus;","import React from 'react'\n\nimport LoadingStatus from '../components/loading-status'\n\nimport './hoc.scss'\n\nconst withLoadingStatus = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <div className={props.loading ? \"status-wrapper\" : null}>\n        <Wrapped {...props} />\n        {props.loading ? <LoadingStatus /> : null}\n      </div>\n  );}\n}\n\nexport default withLoadingStatus;","import ErrorStatus from './error-status.jsx'\n\nexport default ErrorStatus;","import React from 'react'\n\nimport './error-status.scss'\n\nconst ErrorStatus = ({error}) => {\n  const message = error.message || error;\n\n  return (\n  <div className=\"error-status\">Произошла ошибка: {message}</div>\n  )\n}\n\nexport default ErrorStatus;","import React from 'react'\n\nimport ErrorStatus from '../components/error-status';\n\nimport './hoc.scss'\n\nconst withErrorStatus = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <div className={props.error ? \"status-wrapper\" : null}>\n        <Wrapped {...props} />\n        {props.error ? <ErrorStatus error={props.error} /> : null}\n      </div>\n    )\n  }\n}\n\nexport default withErrorStatus;","const actionFactory = (type) => (payload) => ({type, payload})\n\nexport default actionFactory;","import actionFactory from './actionFactory';\n\nexport const FETCH_MEASURE_UNITS_SUCCESS = 'FETCH_MEASURE_UNITS_SUCCESS';\nexport const measureUnitsLoaded = actionFactory(FETCH_MEASURE_UNITS_SUCCESS);\n\nexport const FETCH_MEASURE_UNITS_REQUEST = 'FETCH_MEASURE_UNITS_REQUEST';\nexport const measureUnitsRequested = actionFactory(FETCH_MEASURE_UNITS_REQUEST);\n\nexport const FETCH_MEASURE_UNITS_FAILURE = 'FETCH_MEASURE_UNITS_FAILURE';\nexport const measureUnitsError = actionFactory(FETCH_MEASURE_UNITS_FAILURE);\n\nexport const fetchMeasureUnits = (gpApiService, dispatch) => () => {\n    dispatch(measureUnitsRequested());\n    \n    gpApiService.getMeasureUnits()\n    .then(data => dispatch(measureUnitsLoaded(data)))\n    .catch(err => dispatch(measureUnitsError(err)));\n}","import Table from \"./table\";\n\nexport default Table;","import React from 'react'\nimport \"./table.scss\";\n\nconst Table = ({values=[], columns, onRowSelected=() => {}}) => {\n  return (\n    <table className=\"table-component\">\n      <thead>\n        <tr>\n        {\n          columns.map((col, idx) => {\n          return <td key={idx}>{col.label}</td>\n          })\n        }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          values.map((value, row) => {\n            return (\n              <tr key={value.id || row}\n                onClick={() => onRowSelected(row)}\n              >\n              {\n                columns.map((col, idx) => {\n                return <td key={idx}>{value[col.property]}</td>\n                })\n              }\n              </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table;","import React, { Component } from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchMeasureUnits } from \"../../actions/measure-units\";\n\nimport Table from \"../table\";\n\nclass MeasureUnitsTableContainer extends Component {\n  componentDidMount() {\n    this.props.fetchMeasureUnits();\n  }\n\n  render() {\n    return <Table \n      values={this.props.values}\n      columns={[\n        {label: 'Ед.изм', property: 'unit'},\n        {label: 'Базовая ед.изм', property: 'base'},\n        {label: 'Коэф. преобразования', property: 'factor'},\n      ]}\n    />\n  }\n}\n\nconst mapStateToProps = ({measureUnits}) => {\n  return {\n    ...measureUnits\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchMeasureUnits: fetchMeasureUnits(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(MeasureUnitsTableContainer);","import MeasureUnitsTable from \"./measure-units-table.jsx\";\n\nexport default MeasureUnitsTable;","import ActionsBar from './actions-bar.jsx';\n\nexport default ActionsBar;","import React from 'react'\n\nimport './actions-bar.scss'\n\nconst ActionsBar = ({children}) => {\n  return (\n    <div className=\"actions-bar\">\n      {children}\n    </div>\n  )\n}\n\nexport default ActionsBar;","import SearchField from './search-field.jsx';\n\nexport default SearchField;","import React from 'react'\n\nimport './search-field.scss'\n\nconst SearchField = () => {\n  return (\n    <div className=\"search-field\">\n      <input type=\"text\" placeholder=\"Поиск...\" />\n    </div>\n  )\n}\n\nexport default SearchField;","import TableActions from './table-actions.jsx';\n\nexport default TableActions;","import React from 'react'\n\nimport { localImage } from \"../../utils\";\n\nconst TableActions = () => {\n  return (\n    // TODO: Table actions\n    <img src={localImage('filter.svg')} alt=\"table actions\"/>\n  )\n}\n\nexport default TableActions;","import React from 'react'\n\nimport MeasureUnitsTable from \"../measure-units\";\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\nimport ActionsBar from '../actions-bar';\nimport SearchField from '../search-field'\nimport TableActions from '../table-actions';\n\nconst MeasureUnitsPage = () => {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <ActionsBar>\n        <SearchField />\n        <TableActions />\n      </ActionsBar>\n      <MeasureUnitsTable />\n    </React.Fragment>\n  )\n}\n\nexport default MeasureUnitsPage;","import actionFactory from './actionFactory';\n\nexport const FETCH_DESIGN_BRANDS_SUCCESS = 'FETCH_DESIGN_BRANDS_SUCCESS';\nexport const designBrandsLoaded = actionFactory(FETCH_DESIGN_BRANDS_SUCCESS);\n\nexport const FETCH_DESIGN_BRANDS_REQUEST = 'FETCH_DESIGN_BRANDS_REQUEST';\nexport const designBrandsRequested = actionFactory(FETCH_DESIGN_BRANDS_REQUEST);\n\nexport const FETCH_DESIGN_BRANDS_FAILURE = 'FETCH_DESIGN_BRANDS_FAILURE';\nexport const designBrandsError = actionFactory(FETCH_DESIGN_BRANDS_FAILURE);\n\nexport const fetchDesignBrands = (gpApiService, dispatch) => () => {\n    dispatch(designBrandsRequested());\n    \n    gpApiService.getDesignBrands()\n    .then(data => dispatch(designBrandsLoaded(data)))\n    .catch(err => dispatch(designBrandsError(err)));\n}","import React, { Component } from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchDesignBrands } from \"../../actions/design-brands\";\n\nimport Table from \"../table\";\n\nclass DesignBrandsTableContainer extends Component {\n  componentDidMount() {\n    this.props.fetchDesignBrands();\n  }\n\n  render() {\n    return <Table \n      values={this.props.values}\n      columns={[\n        {label: 'Наименование основного комплекта рабочих чертежей', property: 'name'},\n        {label: 'Марка', property: 'brand'},\n      ]}\n    />\n  }\n}\n\nconst mapStateToProps = ({designBrands}) => {\n  return {\n    ...designBrands\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchDesignBrands: fetchDesignBrands(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(DesignBrandsTableContainer);","import DesignBrandsTable from './design-brands-table.jsx'\n\nexport default DesignBrandsTable;","import React from 'react'\n\nimport DesignBrandsTable from \"../design-brands\";\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\n\nconst DesignBrandsPage = () => {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <DesignBrandsTable />\n    </React.Fragment>\n  )\n}\n\nexport default DesignBrandsPage;","import BackButton from './back-button.jsx';\n\nexport default BackButton;","import React from 'react'\n\nimport './back-button.scss'\n\nconst BackButton = ({onClick}) => {\n  return (\n    <div \n      className=\"back-button\"\n      onClick={onClick}\n    >Назад</div>\n  )\n};\n\nexport default BackButton;","import actionFactory from './actionFactory';\n\nexport const FETCH_STRUCTURAL_ELEMENTS_SUCCESS = 'FETCH_STRUCTURAL_ELEMENTS_SUCCESS';\nexport const structuralElementsLoaded = actionFactory(FETCH_STRUCTURAL_ELEMENTS_SUCCESS);\n\nexport const FETCH_STRUCTURAL_ELEMENTS_REQUEST = 'FETCH_STRUCTURAL_ELEMENTS_REQUEST';\nexport const structuralElementsRequested = actionFactory(FETCH_STRUCTURAL_ELEMENTS_REQUEST);\n\nexport const FETCH_STRUCTURAL_ELEMENTS_FAILURE = 'FETCH_STRUCTURAL_ELEMENTS_FAILURE';\nexport const structuralElementsError = actionFactory(FETCH_STRUCTURAL_ELEMENTS_FAILURE);\n\nexport const fetchStructuralElements = (gpApiService, dispatch) => () => {\n    dispatch(structuralElementsRequested());\n    \n    gpApiService.getStructuralElements()\n    .then(data => dispatch(structuralElementsLoaded(data)))\n    .catch(err => dispatch(structuralElementsError(err)));\n}","import React, { Component } from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchStructuralElements } from \"../../actions/structural-elements\";\n\nimport Table from \"../table\";\n\nclass StructuralElementsTableContainer extends Component {\n  componentDidMount() {\n    this.props.fetchStructuralElements();\n  }\n\n  render() {\n    const {values, selected, onRowSelected} = this.props;\n\n    let properties = [];\n\n    if (selected !== null) {\n      properties = values[selected].properties\n      .map(({name, measureUnit, value}) => {return {\n        name: measureUnit ? `${name}, ${measureUnit}` : name,\n        value\n      }});\n    }\n\n    return (selected !== null) ? (\n      <React.Fragment>\n        <Table \n          values={properties}\n          columns={[\n            {label: 'Признак', property: 'name'},\n            {label: 'Значение', property: 'value'},\n          ]}\n        />\n      </React.Fragment>\n      ) : (\n      <React.Fragment>\n        <Table \n          values={values}\n          columns={[\n            {label: 'ID', property: 'elemId'},\n            {label: 'Наименование элемента', property: 'name'},\n            {label: 'Класс', property: 'class'},\n          ]}\n          onRowSelected={onRowSelected}\n        />\n      </React.Fragment>\n      )\n  }\n}\n\nconst mapStateToProps = ({structuralElements}) => {\n  return {\n    ...structuralElements\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchStructuralElements: fetchStructuralElements(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(StructuralElementsTableContainer);","import StructuralElementsTable from './structural-elements-table.jsx';\n\nexport default StructuralElementsTable;","import React, {Component} from 'react'\n\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\nimport ActionsBar from '../actions-bar';\nimport SearchField from '../search-field'\nimport TableActions from '../table-actions';\nimport BackButton from '../back-button';\n\nimport StructuralElementsTable from '../structural-elements';\n\nclass StructuralElementsPage extends Component {\n  state = {\n    selected: null\n  }\n\n  rowSelected = (row = null) => {\n    this.setState({selected: row});\n  }\n\n  render() {\n    const {selected} = this.state;\n\n    return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <ActionsBar>\n        {\n          (selected !== null) ? (\n            <React.Fragment>\n              <TableActions />\n              <BackButton\n                onClick={() => this.rowSelected()}\n              />\n            </React.Fragment>\n          ) : (\n            <SearchField />\n          )\n        }\n        </ActionsBar>\n      <StructuralElementsTable \n        selected={selected}\n        onRowSelected={this.rowSelected}\n      />\n    </React.Fragment>\n  )}\n}\n\nexport default StructuralElementsPage;","import actionFactory from './actionFactory';\n\nexport const FETCH_TYPES_OF_JOBS_SUCCESS = 'FETCH_TYPES_OF_JOBS_SUCCESS';\nexport const typesOfJobsLoaded = actionFactory(FETCH_TYPES_OF_JOBS_SUCCESS);\n\nexport const FETCH_TYPES_OF_JOBS_REQUEST = 'FETCH_TYPES_OF_JOBS_REQUEST';\nexport const typesOfJobsRequested = actionFactory(FETCH_TYPES_OF_JOBS_REQUEST);\n\nexport const FETCH_TYPES_OF_JOBS_FAILURE = 'FETCH_TYPES_OF_JOBS_FAILURE';\nexport const typesOfJobsError = actionFactory(FETCH_TYPES_OF_JOBS_FAILURE);\n\nexport const fetchTypesOfJobs = (gpApiService, dispatch) => () => {\n    dispatch(typesOfJobsRequested());\n    \n    gpApiService.getTypesOfJobs()\n    .then(data => dispatch(typesOfJobsLoaded(data)))\n    .catch(err => dispatch(typesOfJobsError(err)));\n}","import React, { Component } from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchTypesOfJobs } from \"../../actions/types-of-jobs\";\n\nimport './types-of-jobs-tree.scss';\n\nclass TypesOfJobsTreeContainer extends Component {\n  state = {\n    openedSections: []\n  }\n\n  componentDidMount() {\n    this.props.fetchTypesOfJobs();\n  }\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.values.length !== this.props.values.length) {\n      this.setState({\n        openedSections: this.props.values.map(({id}) => id)\n      })\n    }\n  }\n\n  onBranchClicked = (id) => {\n    this.setState(({openedSections}) => {\n      return {\n        openedSections: openedSections.includes(id)\n          ? openedSections.filter(section => section !== id)\n          : [...openedSections, id]\n      }\n    })\n  }\n\n//TODO: Tree component\n  render() {\n    const sections = this.props.values;\n    const {openedSections} = this.state;\n\n    return (\n      <div className=\"types-of-jobs-tree\">\n        <div className=\"tree-header\">Раздел / Вид работ</div>\n        {\n          sections.map(({id, section, types}) => {\n            return (\n              <div key={id} className=\"tree-section\">\n                <div \n                  className=\"tree-section-title\"\n                  onClick={() => this.onBranchClicked(id)}\n                >\n                  {section}\n                </div>\n                {\n                  openedSections.includes(id) ?\n                  types.map(({id, name, measureUnit}) => {\n                  return (\n                    <div key={id} className=\"tree-leaf\">\n                      {`${name}, ${measureUnit}`}\n                    </div>\n                    )\n                  })\n                  : null\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({typesOfJobs}) => {\n  return {\n    ...typesOfJobs\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchTypesOfJobs: fetchTypesOfJobs(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(TypesOfJobsTreeContainer);","import TypesOfJobsTree from './types-of-jobs-tree.jsx';\n\nexport default TypesOfJobsTree;","import React from 'react'\n\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\nimport ActionsBar from '../actions-bar';\nimport SearchField from '../search-field'\nimport TableActions from '../table-actions';\n\nimport TypesOfJobsTree from '../types-of-jobs';\n\nconst TypesOfJobsPage = () => {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <TopMenu />\n      <ActionsBar>\n        <SearchField />\n        <TableActions />\n        ФТ-2.2\n      </ActionsBar>\n      <TypesOfJobsTree />\n    </React.Fragment>\n  )\n}\n\nexport default TypesOfJobsPage;","import actionFactory from './actionFactory';\n\nexport const FETCH_REFERENCES_AND_RATES_SUCCESS = 'FETCH_REFERENCES_AND_RATES_SUCCESS';\nexport const referencesAndRatesLoaded = actionFactory(FETCH_REFERENCES_AND_RATES_SUCCESS);\n\nexport const FETCH_REFERENCES_AND_RATES_REQUEST = 'FETCH_REFERENCES_AND_RATES_REQUEST';\nexport const referencesAndRatesRequested = actionFactory(FETCH_REFERENCES_AND_RATES_REQUEST);\n\nexport const FETCH_REFERENCES_AND_RATES_FAILURE = 'FETCH_REFERENCES_AND_RATES_FAILURE';\nexport const referencesAndRatesError = actionFactory(FETCH_REFERENCES_AND_RATES_FAILURE);\n\nexport const fetchReferencesAndRates = (gpApiService, dispatch) => () => {\n    dispatch(referencesAndRatesRequested());\n    \n    gpApiService.getReferencesAndRates()\n    .then(data => dispatch(referencesAndRatesLoaded(data)))\n    .catch(err => dispatch(referencesAndRatesError(err)));\n}","import React, {Component} from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchReferencesAndRates } from \"../../actions/references-and-rates\";\n\n//TODO: TreeTable component\nclass ReferencesAndRatesTreeTable extends Component {\n  componentDidMount() {\n    this.props.fetchReferencesAndRates();\n  }\n\n  renderType = (type, idx) => {\n    const {onTypeSelected} = this.props;\n\n    return (\n      <tr \n        key={type.id || idx}\n        onClick={() => onTypeSelected(type.id)}\n      >\n        <td>{type.code}</td>\n        <td>{type.name}</td>\n        <td>{type.measureUnit}</td>\n        <td>{type.cost}</td>\n      </tr>\n    )\n  }\n\n  renderGroup = (group, idx) => {\n    return (\n      <React.Fragment key={group.id || idx}>\n        <tr>\n          <td>{group.code}</td>\n          <td><strong>{group.name}</strong></td>\n          <td/>\n          <td/>\n        </tr>\n        {group.types.map(this.renderType)}\n      </React.Fragment>\n    )\n  }\n\n  renderSection = (section, idx) => {\n    return (\n      <React.Fragment key={section.id || idx}>\n        <tr>\n          <td/>\n          <td><strong>{section.name}</strong></td>\n          <td/>\n          <td/>\n        </tr>\n        {section.groups.map(this.renderGroup)}\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const {values} = this.props;\n\n    return  (\n      <table className=\"table-component\">\n        <thead>\n          <tr>\n            <td>Шифр</td>\n            <td>Наименование вида работ и затрат</td>\n            <td>Единица измерения</td>\n            <td>Цена УЕР за единицу измерения в базовом уровне цен (без прочих затат)</td>\n          </tr>\n        </thead>\n        <tbody>\n        {\n          values.map(this.renderSection)\n        }\n        </tbody>\n      </table>\n    )\n  }\n}\n\nconst mapStateToProps = ({referencesAndRates}) => {\n  return {\n    ...referencesAndRates\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchReferencesAndRates: fetchReferencesAndRates(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(ReferencesAndRatesTreeTable);","import ReferencesAndRatesTreeTable from './references-and-rates-tree-table.jsx';\n\nexport default ReferencesAndRatesTreeTable;","import actionFactory from './actionFactory';\n\nexport const FETCH_FOT_AND_MACHINERY_SUCCESS = 'FETCH_FOT_AND_MACHINERY_SUCCESS';\nexport const fotAndMachineryLoaded = actionFactory(FETCH_FOT_AND_MACHINERY_SUCCESS);\n\nexport const FETCH_FOT_AND_MACHINERY_REQUEST = 'FETCH_FOT_AND_MACHINERY_REQUEST';\nexport const fotAndMachineryRequested = actionFactory(FETCH_FOT_AND_MACHINERY_REQUEST);\n\nexport const FETCH_FOT_AND_MACHINERY_FAILURE = 'FETCH_FOT_AND_MACHINERY_FAILURE';\nexport const fotAndMachineryError = actionFactory(FETCH_FOT_AND_MACHINERY_FAILURE);\n\nexport const fetchFotAndMachinery = (gpApiService, dispatch) => (id) => {\n    dispatch(fotAndMachineryRequested());\n    \n    gpApiService.getFotAndMachineryFor(id)\n    .then(data => dispatch(fotAndMachineryLoaded(data)))\n    .catch(err => dispatch(fotAndMachineryError(err)));\n}","import Tabs from './tabs.jsx';\n\nexport default Tabs;","import React, { Component } from 'react'\n\nimport './tabs.scss';\n\nclass Tabs extends Component {\n  state = {\n    selected: 0\n  }\n\n  onTabSelected = (idx) => {\n    this.setState({\n      selected: idx\n    });\n\n    this.props.onTabSelected(idx);\n  }\n\n  render() {\n    const {labels=[]} = this.props;\n    const {selected} = this.state;\n\n    return (\n      <div className=\"tabs\">\n        {labels.map((label, idx) => {\n          return (\n            <div\n              key={idx}\n              onClick={() => this.onTabSelected(idx)}\n              className={selected === idx ? \"tab-is-active\" : null}\n            >\n              {label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default Tabs;","import React, { Component } from 'react'\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { withGpApiService, withLoadingStatus, withErrorStatus } from \"../../hoc\";\nimport { fetchFotAndMachinery } from \"../../actions/fot-and-machinery\";\n\nimport Tabs from '../tabs';\nimport Table from \"../table\";\n\nclass FotAndMachineryTabs extends Component {\n  state = {\n    selectedTab: 0\n  }\n\n  componentDidMount() {\n    const {current} = this.props;\n\n    if (current) {\n      this.props.fetchFotAndMachinery(1/*current*/); //1 - пока единственный в поддельном\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {current} = this.props;\n    \n    if (current && (prevProps.current !== current)) {\n      this.props.fetchFotAndMachinery(1/*current*/);\n    }\n  }\n\n  onTabSelected = (idx) => {\n    this.setState({\n      selectedTab: idx\n    })\n  }\n\n  showSelectedTable = () => {\n    const {selectedTab} = this.state;\n    const {value: {fot=[], machinery=[]}} = this.props;\n\n    if (selectedTab === 0) {\n      return (\n        <Table \n          values={fot.map((props, idx) => {\n            return {idx: idx + 1, ...props}\n          })}\n          columns={[\n            {label: 'Номер', property: 'idx'},\n            {label: 'Наименование', property: 'name'},\n            {label: 'Ед.изм', property: 'measureUnit'},\n            {label: 'Кол-во', property: 'count'},\n          ]}\n        />\n      )\n    } else {\n      return (\n        <Table \n          values={machinery.map((props, idx) => {\n            return {idx: idx + 1, ...props}\n          })}\n          columns={[\n            {label: '№', property: 'idx'},\n            {label: 'Шифр', property: 'code'},\n            {label: 'Наименование', property: 'name'},\n            {label: 'Ед.изм', property: 'measureUnit'},\n            {label: 'Норма', property: 'standart'},\n          ]}\n        />\n      )\n    }\n  }\n\n  render() {\n    const {current} = this.props;\n\n    if (!current) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <Tabs \n          labels={[\"ФОТ\", \"Механизмы\"]}\n          onTabSelected={this.onTabSelected}\n        />\n        {this.showSelectedTable()}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({fotAndMachinery}) => {\n  return {\n    ...fotAndMachinery\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {gpApiService}) => {\n  return {\n    fetchFotAndMachinery: fetchFotAndMachinery(gpApiService, dispatch)\n  }\n}\n\nexport default compose(\n  withGpApiService(),\n  connect(mapStateToProps, mapDispatchToProps),\n  withLoadingStatus(),\n  withErrorStatus()\n)(FotAndMachineryTabs);","import FotAndMachineryTabs from './fot-and-machinery-tabs.jsx';\n\nexport default FotAndMachineryTabs;","import React, {Component} from 'react'\n\nimport MainHeader from '../main-header';\nimport TopMenu from '../top-menu';\nimport ActionsBar from '../actions-bar';\nimport SearchField from '../search-field'\nimport TableActions from '../table-actions';\n\nimport ReferencesAndRatesTreeTable from '../references-and-rates';\nimport FotAndMachineryTabs from '../fot-and-machinery';\n\nimport './references-and-rates-page.scss';\n\nclass ReferencesAndRatesPage extends Component {\n  state = {\n    current: null\n  }\n\n  onTypeSelected = (id = null) => {\n    this.setState({\n      current: id\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <MainHeader />\n        <TopMenu />\n        <ActionsBar>\n          <SearchField />\n          <TableActions />\n        </ActionsBar>\n        <div className=\"left-right\">\n          <ReferencesAndRatesTreeTable onTypeSelected={this.onTypeSelected} />\n          <FotAndMachineryTabs current={this.state.current} />\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ReferencesAndRatesPage;","import App from './app.jsx'\n\nexport default App;","import React from 'react';\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { MainPage, NotFoundPage, \n  MeasureUnitsPage, DesignBrandsPage,\n  StructuralElementsPage, TypesOfJobsPage,\nReferencesAndRatesPage } from \"../pages\";\n\nimport { config } from \"../../constants\";\n\n// import '@gpn-design/uikit/dist/style.css';\n// import { Button } from '@gpn-design/uikit';\n\nconst App = () => {\n  const {link} = config;\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path={link('/')} exact component={MainPage} />\n        <Route path={link('/measure-units/')} component={MeasureUnitsPage} />\n        <Route path={link('/design-brands/')} component={DesignBrandsPage} />\n        <Route path={link('/structural-elements/')} component={StructuralElementsPage} />\n        <Route path={link('/types-of-jobs/')} component={TypesOfJobsPage} />\n        <Route path={link('/references-and-rates/')} component={ReferencesAndRatesPage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n      {\n      /* <body\n        className=\"theme theme_breakpoint_default theme_color_gpn-default theme_control_gpn-default theme_font_small theme_gap_small theme_size_gpn-default theme_space_default\"\n      >\n        <Button \n          type=\"button\" \n          view=\"primary\" \n          wpSize=\"l\" \n          from=\"default\" \n          width=\"auto\">Кнопка</Button>\n      </body> */}\n    </div>\n  );\n}\n\nexport default App;\n","export default class FetchService {\n    _apiUrl = 'http://localhost:3001/';\n\n    async getResource(url) {    \n        const result = await fetch(this._apiUrl + url);\n    \n        if (!result.ok) {\n            throw new Error(`Could not fetch url ${url}`);\n        }\n    \n        return result.json();\n    }\n}\n","import FetchService from \"./fetch-service\";\n\nexport default class GpApiService extends FetchService {\n\n    getTypesOfJobs = () => {\n        return this.getResource('types-of-jobs');\n    }\n\n    getMeasureUnits = () => {\n        return this.getResource('measure-units');\n    }\n\n    getReferencesAndRates = () => {\n        return this.getResource('references-and-rates');\n    }\n\n    getFotAndMachineryFor = (id) => {\n        return this.getResource(`fot-and-machinery/${id}`);\n    }\n\n    getDesignBrands = () => {\n        return this.getResource('design-brands');\n    }\n\n    getStructuralElements = () => {\n        return this.getResource('structural-elements');\n    }\n}","import FetchService from \"./fetch-service\";\n\nexport default class FakeGpApiService extends FetchService {\n\n    replyWithDelay = (data, delay = 700) => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(data)\n            }, delay);\n        })\n    }\n\n    getTypesOfJobs = () => {\n        return this.replyWithDelay([\n            {\"id\": 1, \"section\": \"Раздел Земляные работы\", \"types\": [\n                {\"id\": 1, \"name\": \"Разработка котлована\", \"measureUnit\": \"м3\"},\n                {\"id\": 2, \"name\": \"Рытье траншеи\", \"measureUnit\": \"м3\"},\n                {\"id\": 3, \"name\": \"Обратная засыпка\", \"measureUnit\": \"м3\"},\n                {\"id\": 4, \"name\": \"Обвалование\", \"measureUnit\": \"м3\"}\n            ]},\n            {\"id\": 2, \"section\": \"Раздел Свайные работы\", \"types\": [\n                {\"id\": 5, \"name\": \"Погружение свай\", \"measureUnit\": \"шт\"},\n                {\"id\": 6, \"name\": \"Устройство буронабивных свай\", \"measureUnit\": \"шт\"}\n            ]},\n            {\"id\": 3, \"section\": \"Раздел Конструкции металлические\", \"types\": [\n                {\"id\": 7, \"name\": \"Монтаж оголовников свай\", \"measureUnit\": \"шт\"},\n                {\"id\": 8, \"name\": \"Монтаж префабрикованных КМ (укрупненные конструкции, например, фермы)\", \"measureUnit\": \"тн\"},\n                {\"id\": 9, \"name\": \"Монтаж сборных резервуаров\", \"measureUnit\": \"тн\"}\n            ]}\n        ]);\n    }\n\n    getReferencesAndRates = () => {\n        return this.replyWithDelay([\n            {\"name\": \"Земляные работы и работы по благоустройству территории\", \"groups\": [\n                {\"code\": \"01-002\", \"name\": \"Разработка грунта вручную\", \"types\": [\n                    {\"id\": 1, \"code\": \"УЕР 01-002-01\", \"name\": \"в траншеях глубиной до 2 м без креплений с откосами, группа грунта: 1\", \"measureUnit\": \"100 м3\", \"cost\": \"2 070,00\"},\n                    {\"id\": 2, \"code\": \"УЕР 01-002-02\", \"name\": \"в траншеях глубиной до 2 м без креплений с откосами, группа грунта: 2\", \"measureUnit\": \"100 м3\", \"cost\": \"2 702,00\"},\n                    {\"id\": 3, \"code\": \"УЕР 01-002-03\", \"name\": \"с креплениями в траншеях шириной и глубиной до 2 м, группа грунта: 1\", \"measureUnit\": \"100 м3\", \"cost\": \"2 358,00\"},\n                    {\"id\": 4, \"code\": \"УЕР 01-002-04\", \"name\": \"с креплениями в траншеях шириной и глубиной до 2 м, группа грунта: 2\", \"measureUnit\": \"100 м3\", \"cost\": \"3 564,00\"}\n                ]}\n            ]},\n            {\"name\": \"Строительные металлические конструкции\", \"groups\": [\n                {\"code\": \"05-001\", \"name\": \"Монтаж несущих металлоконструкций\", \"types\": [\n                    {\"id\": 5, \"code\": \"УЕР 05-001-01\", \"name\": \"Монтаж опорных плит (металлических ростверков) массой до 0,5 т из проката 265-345 МПа (27-35 кгс/мм2) (марка стали С345, С345к, С345Т1)\", \"measureUnit\": \"т\", \"cost\": \"1 313,00\"},\n                    {\"id\": 6, \"code\": \"УЕР 05-001-02\", \"name\": \"Монтаж опорных плит (металлических ростверков) массой 0,5-1 т из проката 265-345 МПа (27-35 кгс/мм2) (марка стали С345, С345к, С345Т1)\", \"measureUnit\": \"т\", \"cost\": \"1 011,00\"},\n                    {\"id\": 7, \"code\": \"УЕР 05-001-03\", \"name\": \"Монтаж опорных плит (металлических ростверков) массой более 1 т из проката 265-345 МПа (27-35 кгс/мм2) (марка стали С345, С345к, С345Т1)\", \"measureUnit\": \"т\", \"cost\": \"728,00\"},\n                    {\"id\": 8, \"code\": \"УЕР 05-001-04\", \"name\": \"Монтаж опорных конструкций этажерочного типа из проката 265-345 МПа (27-35 кгс/мм2) (марка стали С345, С345к, С345Т1)\", \"measureUnit\": \"т\", \"cost\": \"1 299,00\"}\n                ]}\n            ]},\n            {\"name\": \"Свайные фундаменты\", \"groups\": [\n                {\"code\": \"02-003\", \"name\": \"Устройство свайного основания буроопускным способом. Установка готовых свай\", \"types\": [\n                    {\"id\": 9, \"code\": \"УЕР 02-003-01\", \"name\": \"D 159 мм при длине сваи 9 м (без стоимости материалов)\", \"measureUnit\": \"м\", \"cost\": \"20,16\"},\n                    {\"id\": 10, \"code\": \"УЕР 02-003-02\", \"name\": \"D 219 мм при длине сваи 12 м (без стоимости материалов)\", \"measureUnit\": \"м\", \"cost\": \"16,93\"}\n                ]}\n            ]},\n            {\"name\": \"Технологические трубопроводы и арматура\", \"groups\": [\n                {\"code\": \"07-001\", \"name\": \"Монтаж внутриплощадочных технологических трубопроводов (на условное давление не более 2,5 МПа) из труб и готовых деталей\", \"types\": [\n                    {\"id\": 11, \"code\": \"УЕР 07-001-01\", \"name\": \"D18 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"6 980,00\"},\n                    {\"id\": 12, \"code\": \"УЕР 07-001-02\", \"name\": \"D 25 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"7 332,00\"},\n                    {\"id\": 13, \"code\": \"УЕР 07-001-03\", \"name\": \"D 32 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"7 556,00\"},\n                    {\"id\": 14, \"code\": \"УЕР 07-001-04\", \"name\": \"D 38 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"8 638,00\"},\n                    {\"id\": 15, \"code\": \"УЕР 07-001-05\", \"name\": \"D 45 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"8 812,00\"},\n                    {\"id\": 16, \"code\": \"УЕР 07-001-06\", \"name\": \"D 57 мм (без стоимости труб и готовых деталей)\", \"measureUnit\": \"100 м\", \"cost\": \"9 072,00\"}\n                ]}\n            ]}\n        ]);\n    }\n\n    getFotAndMachineryFor = (id) => {\n        //Пока нет данных, возвращаем всегда одну и ту же\n        return this.replyWithDelay({\n            \"id\": 1,\n            \"fot\": [\n                {\"name\": \"Затраты труда рабочих-строителей Разряд 4\", \"measureUnit\":\"чел.-ч\", \"count\": \"2.79\"},\n                {\"name\": \"Затраты труда машинистов\", \"measureUnit\":\"чел.-ч\", \"count\": \"5.51\"}\n            ],\n            \"machinery\": [\n                {\"code\": \"021144\", \"name\": \"Краны на автомобильном ходу при работе на других видах строительства 25 т\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.66\"},\n                {\"code\": \"021146\", \"name\": \"Краны на автомобильном ходу при работе на других видах строительства 63 т\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.02\"},\n                {\"code\": \"040202\", \"name\": \"Агрегаты сварочные передвижные с номинальным сварочным током 250-400 А с дизельным двигателем\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.09\"},\n                {\"code\": \"060338\", \"name\": \"Экскаваторы одноковшовые дизельные на пневмоколесном ходу при работе на других видах строительства 0,4 м3\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.03\"},\n                {\"code\": \"110055\", \"name\": \"Автобетоносмесители 6 м3\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.4\"},\n                {\"code\": \"110211\", \"name\": \"Автобетононасосы 65 м3/ч\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.21\"},\n                {\"code\": \"121601\", \"name\": \"Машины поливомоечные 6000 л\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.02\"},\n                {\"code\": \"140623\", \"name\": \"Буровые установки с крутящим моментом 250-350 кНм\", \"measureUnit\": \"маш.-ч\", \"standart\": \"0.67\"}\n            ]\n        });\n    }\n\n    getStructuralElements = () => {\n        return this.replyWithDelay([\n            {\"id\": 1, \"elemId\": \"123\", \"name\": \"Труба стальная D57\", \"class\": \"Трубы\", \"properties\": [\n                {\"name\": \"Диаметр\", \"measureUnit\": \"\", \"value\": \"57\"},\n                {\"name\": \"Материал\", \"value\": \"Сталь\"},\n                {\"name\": \"Длина\", \"measureUnit\": \"м\", \"value\": \"11\"},\n                {\"name\": \"Уровень\", \"measureUnit\": \"мм\", \"value\": \"2061\"}\n            ]},\n            {\"id\": 2, \"elemId\": \"234\", \"name\": \"Труба стальная D57\", \"class\": \"Трубы\", \"properties\": [\n                {\"name\": \"Диаметр\", \"measureUnit\": \"\", \"value\": \"57\"},\n                {\"name\": \"Материал\", \"value\": \"Сталь\"},\n                {\"name\": \"Длина\", \"measureUnit\": \"м\", \"value\": \"12\"},\n                {\"name\": \"Уровень\", \"measureUnit\": \"мм\", \"value\": \"2062\"}\n            ]},\n            {\"id\": 3, \"elemId\": \"555\", \"name\": \"Швеллер_с_уклоном_внутренних_граней_полок_(У)_ГОСТ_8240-97.МД.2001320.УР.v03\", \n                \"class\": \"Швеллера\", \"properties\": [\n                {\"name\": \"Диаметр\", \"measureUnit\": \"\", \"value\": \"53\"},\n                {\"name\": \"Материал\", \"value\": \"Сталь\"},\n                {\"name\": \"Длина\", \"measureUnit\": \"м\", \"value\": \"13\"},\n                {\"name\": \"Уровень\", \"measureUnit\": \"мм\", \"value\": \"2063\"}\n            ]}\n        ]);\n    }\n\n    getMeasureUnits = () => {\n        return this.replyWithDelay([\n            {\"id\": 1, \"unit\": \"100 м3\", \"base\": \"м3\", \"factor\": 0.01},\n            {\"id\": 2, \"unit\": \"штук\", \"base\": \"шт\", \"factor\": 1}\n        ]);\n    }\n\n    getDesignBrands = () => {\n        return this.replyWithDelay([\n            {\"id\": 1, \"name\": \"Технология производства\", \"brand\": \"ТХ\"},\n            {\"id\": 2, \"name\": \"Технологические коммуникации\", \"brand\": \"ТК\"},\n            {\"id\": 3, \"name\": \"Генеральный план и сооружения транспорта\", \"brand\": \"ГТ\"},\n            {\"id\": 4, \"name\": \"Генеральный план\", \"brand\": \"ГП\"},\n            {\"id\": 5, \"name\": \"Архитектурные решения\", \"brand\": \"АР\"},\n            {\"id\": 6, \"name\": \"Интерьеры\", \"brand\": \"АИ\"},\n            {\"id\": 7, \"name\": \"Конструкции железобетонные\", \"brand\": \"КЖ\"},\n            {\"id\": 8, \"name\": \"Конструкции деревянные\", \"brand\": \"КД\"},\n            {\"id\": 9, \"name\": \"Архитектурно-строительные решения\", \"brand\": \"АС\"},\n            {\"id\": 10, \"name\": \"Конструкции металлические деталировочные\", \"brand\": \"КМД\"},\n            {\"id\": 11, \"name\": \"Водопровод и канализация\", \"brand\": \"ВК\"},\n            {\"id\": 12, \"name\": \"Отопление, вентиляция и кондиционирование\", \"brand\": \"ОВ\"},\n            {\"id\": 13, \"name\": \"Тепломеханические решения котельных\", \"brand\": \"ТМ\"},\n            {\"id\": 14, \"name\": \"Воздухоснабжение\", \"brand\": \"ВС\"},\n            {\"id\": 15, \"name\": \"Пылеудаление\", \"brand\": \"ПУ\"},\n            {\"id\": 16, \"name\": \"Холодоснабжение\", \"brand\": \"ХС\"},\n            {\"id\": 17, \"name\": \"Газоснабжение (внутренние устройства)\", \"brand\": \"ГСВ\"},\n            {\"id\": 18, \"name\": \"Силовое электрооборудование\", \"brand\": \"ЭМ\"},\n            {\"id\": 19, \"name\": \"Электрическое освещение (внутреннее)\", \"brand\": \"ЭО\"},\n            {\"id\": 20, \"name\": \"Системы связи\", \"brand\": \"СС\"},\n            {\"id\": 21, \"name\": \"Пожаротушение\", \"brand\": \"РТ\"},\n            {\"id\": 22, \"name\": \"Радиосвязь, радиовещание и телевидение\", \"brand\": \"ПТ\"},\n            {\"id\": 23, \"name\": \"Пожарная сигнализация\", \"brand\": \"ПС\"},\n            {\"id\": 24, \"name\": \"Охранная и охранно-пожарная сигнализация\", \"brand\": \"ОС\"},\n            {\"id\": 25, \"name\": \"Гидротехнические решения\", \"brand\": \"ГР\"},\n            {\"id\": 26, \"name\": \"Автоматизация …\", \"brand\": \"А …\"},\n            {\"id\": 27, \"name\": \"Автоматизация комплексная\", \"brand\": \"АК\"},\n            {\"id\": 28, \"name\": \"Антикоррозионная защита конструкций зданий, сооружений\", \"brand\": \"АЗ\"},\n            {\"id\": 29, \"name\": \"Антикоррозионная защита технологических аппаратов, газоходов и трубопроводов\", \"brand\": \"АЗО\"},\n            {\"id\": 30, \"name\": \"Тепловая изоляция оборудования и трубопроводов\", \"brand\": \"ТИ\"},\n            {\"id\": 31, \"name\": \"Автомобильные дороги\", \"brand\": \"АД\"},\n            {\"id\": 32, \"name\": \"Железнодорожные пути\", \"brand\": \"ПЖ\"},\n            {\"id\": 33, \"name\": \"Сооружения транспорта\", \"brand\": \"ТР\"},\n            {\"id\": 34, \"name\": \"Наружные сети водоснабжения\", \"brand\": \"НВ\"},\n            {\"id\": 35, \"name\": \"Наружные сети канализации\", \"brand\": \"НК\"},\n            {\"id\": 36, \"name\": \"Наружные сети водоснабжения и канализации\", \"brand\": \"НВК\"},\n            {\"id\": 37, \"name\": \"Тепломеханические решения тепловых сетей\", \"brand\": \"ТС\"},\n            {\"id\": 38, \"name\": \"Наружные газопроводы\", \"brand\": \"ГСН\"},\n            {\"id\": 39, \"name\": \"Наружное электроосвещение\", \"brand\": \"ЭН\"},\n            {\"id\": 40, \"name\": \"Электроснабжение\", \"brand\": \"ЭС\"}\n        ]);\n    }\n}","import { FETCH_MEASURE_UNITS_FAILURE, FETCH_MEASURE_UNITS_REQUEST, \n    FETCH_MEASURE_UNITS_SUCCESS } from \"../actions/measure-units\";\n\nconst updateMeasureUnitsList = (state, action) => {\n    if (state === undefined) {\n        return {\n            values: [],\n            loading: false,\n            error: null    \n        }\n    }\n\n    switch (action.type) {\n        case FETCH_MEASURE_UNITS_SUCCESS:\n            return {\n                values: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_MEASURE_UNITS_REQUEST:\n            return {\n                values: [],\n                loading: true,\n                error: null\n            }\n        case FETCH_MEASURE_UNITS_FAILURE:\n            return {\n                values: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.measureUnits;\n    }\n}\n\nexport default updateMeasureUnitsList;","import { FETCH_DESIGN_BRANDS_FAILURE, FETCH_DESIGN_BRANDS_REQUEST, \n    FETCH_DESIGN_BRANDS_SUCCESS } from '../actions/design-brands';\n\nconst updateDesignBrandsList = (state, action) => {\n    if (state === undefined) {\n        return {\n            values: [],\n            loading: false,\n            error: null    \n        }\n    }\n\n    switch (action.type) {\n        case FETCH_DESIGN_BRANDS_SUCCESS:\n            return {\n                values: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_DESIGN_BRANDS_REQUEST:\n            return {\n                values: [],\n                loading: true,\n                error: null\n            }\n        case FETCH_DESIGN_BRANDS_FAILURE:\n            return {\n                values: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.designBrands;\n    }\n}\n\nexport default updateDesignBrandsList;","import { FETCH_STRUCTURAL_ELEMENTS_FAILURE, FETCH_STRUCTURAL_ELEMENTS_REQUEST,\n    FETCH_STRUCTURAL_ELEMENTS_SUCCESS } from \"../actions/structural-elements\";\n\nconst updateStructuralElementsList = (state, action) => {\n    if (state === undefined) {\n        return {\n            values: [],\n            loading: false,\n            error: null    \n        }\n    }\n\n    switch (action.type) {\n        case FETCH_STRUCTURAL_ELEMENTS_SUCCESS:\n            return {\n                values: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_STRUCTURAL_ELEMENTS_REQUEST:\n            return {\n                values: [],\n                loading: true,\n                error: null\n            }\n        case FETCH_STRUCTURAL_ELEMENTS_FAILURE:\n            return {\n                values: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.structuralElements;\n    }\n}\n\nexport default updateStructuralElementsList;","import { FETCH_TYPES_OF_JOBS_FAILURE, FETCH_TYPES_OF_JOBS_REQUEST, \n    FETCH_TYPES_OF_JOBS_SUCCESS } from \"../actions/types-of-jobs\";\n\nconst updateTypesOfJobsList = (state, action) => {\n    if (state === undefined) {\n        return {\n            values: [],\n            loading: false,\n            error: null    \n        }\n    }\n\n    switch (action.type) {\n        case FETCH_TYPES_OF_JOBS_SUCCESS:\n            return {\n                values: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_TYPES_OF_JOBS_REQUEST:\n            return {\n                values: [],\n                loading: true,\n                error: null\n            }\n        case FETCH_TYPES_OF_JOBS_FAILURE:\n            return {\n                values: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.typesOfJobs;\n    }\n}\n\nexport default updateTypesOfJobsList;","import { FETCH_REFERENCES_AND_RATES_FAILURE, FETCH_REFERENCES_AND_RATES_REQUEST,\n    FETCH_REFERENCES_AND_RATES_SUCCESS } from \"../actions/references-and-rates\";\n\nconst updateReferencesAndRatesList = (state, action) => {\n    if (state === undefined) {\n        return {\n            values: [],\n            loading: false,\n            error: null\n        }\n    }\n\n    switch (action.type) {\n        case FETCH_REFERENCES_AND_RATES_SUCCESS:\n            return {\n                ...state.referencesAndRates,\n                values: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_REFERENCES_AND_RATES_REQUEST:\n            return {\n                values: [],\n                loading: true,\n                error: null\n            }\n        case FETCH_REFERENCES_AND_RATES_FAILURE:\n            return {\n                ...state.referencesAndRates,\n                values: [],\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.referencesAndRates;\n    }\n}\n\nexport default updateReferencesAndRatesList;","import { FETCH_FOT_AND_MACHINERY_SUCCESS, FETCH_FOT_AND_MACHINERY_REQUEST,\n    FETCH_FOT_AND_MACHINERY_FAILURE } from \"../actions/fot-and-machinery\";\n\nconst updateFotAndMachineryValue = (state, action) => {\n    if (state === undefined) {\n        return  {\n            value: {},\n            loading: false,\n            error: null\n        }\n    }\n\n    switch (action.type) {\n        case FETCH_FOT_AND_MACHINERY_SUCCESS:\n            return {\n                value: action.payload,\n                loading: false,\n                error: null\n            };\n        case FETCH_FOT_AND_MACHINERY_REQUEST:\n            return {\n                value: {},\n                loading: true,\n                error: null\n            }\n        case FETCH_FOT_AND_MACHINERY_FAILURE:\n            return {\n                value: {},\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state.fotAndMachinery;\n    }\n}\n\nexport default updateFotAndMachineryValue;","import updateMeasureUnitsList from './measure-units'\nimport updateDesignBrandsList from './design-brands';\nimport updateStructuralElementsList from './structural-elements';\nimport updateTypesOfJobsList from './types-of-jobs';\nimport updateReferencesAndRatesList from './references-and-rates';\nimport updateFotAndMachineryValue from './fot-and-machinery';\n\nconst reducer = (state, action) => {\n    console.log('action: ', action.type); //JUSTTEST:\n\n    return {\n        measureUnits: updateMeasureUnitsList(state, action),\n        designBrands: updateDesignBrandsList(state, action),\n        structuralElements: updateStructuralElementsList(state, action),\n        typesOfJobs: updateTypesOfJobsList(state, action),\n        referencesAndRates: updateReferencesAndRatesList(state, action),\n        fotAndMachinery: updateFotAndMachineryValue(state, action),\n    }\n};\n\nexport default reducer;","import { createStore } from \"redux\";\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport App from './components/app';\n// import LoadingScreen from './components/loading-screen';\nimport { GpApiServiceProvider } from \"./components/gpapi-service-context\";\nimport GpApiService from \"./services/gpapi-service\";\nimport FakeGpApiService from \"./services/fake-gpapi-service\";\n\nimport store from \"./store\";\n\nimport { config } from \"./constants\";\n\nconst gpApiService = config.isDev ? new GpApiService() : new FakeGpApiService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <LoadingScreen /> */}\n      <GpApiServiceProvider value={gpApiService}>\n        <Router>\n          <App />\n        </Router>\n      </GpApiServiceProvider>\n    </Provider>\n  </React.StrictMode>,document.getElementById('root')\n);"],"sourceRoot":""}